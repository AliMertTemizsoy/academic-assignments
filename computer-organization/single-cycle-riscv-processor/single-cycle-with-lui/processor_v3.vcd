$date
	Sun May 04 15:16:50 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module riscv_processor_v3_tb $end
$var wire 32 ! instr [31:0] $end
$var wire 32 " write_data [31:0] $end
$var wire 32 # read_data [31:0] $end
$var wire 32 $ pc_current [31:0] $end
$var wire 1 % mem_write $end
$var wire 32 & alu_result [31:0] $end
$var reg 1 ' clk $end
$var reg 1 ( reset $end
$var integer 32 ) pc_monitor [31:0] $end
$scope module dut $end
$var wire 1 ' clk $end
$var wire 32 * instr [31:0] $end
$var wire 32 + read_data [31:0] $end
$var wire 1 ( reset $end
$var wire 1 , zero $end
$var wire 32 - write_data [31:0] $end
$var wire 1 . result_src $end
$var wire 1 / reg_write $end
$var wire 1 0 pc_src $end
$var wire 32 1 pc_current [31:0] $end
$var wire 1 % mem_write $end
$var wire 1 2 lui_src $end
$var wire 1 3 jump $end
$var wire 3 4 imm_src [2:0] $end
$var wire 1 5 alu_src $end
$var wire 32 6 alu_result [31:0] $end
$var wire 3 7 alu_control [2:0] $end
$scope module cu $end
$var wire 3 8 funct3 [2:0] $end
$var wire 1 9 funct7_5 $end
$var wire 7 : opcode [6:0] $end
$var wire 1 ( reset $end
$var wire 1 , zero $end
$var wire 1 ; result_src_internal $end
$var wire 1 < reg_write_internal $end
$var wire 1 = mem_write_internal $end
$var wire 1 > lui_src_internal $end
$var wire 1 ? jump_internal $end
$var wire 3 @ imm_src_internal [2:0] $end
$var wire 1 A branch_internal $end
$var wire 1 B alu_src_internal $end
$var wire 2 C alu_op_internal [1:0] $end
$var wire 3 D alu_control_internal [2:0] $end
$var reg 3 E alu_control [2:0] $end
$var reg 1 5 alu_src $end
$var reg 3 F imm_src [2:0] $end
$var reg 1 3 jump $end
$var reg 1 2 lui_src $end
$var reg 1 % mem_write $end
$var reg 1 0 pc_src $end
$var reg 1 / reg_write $end
$var reg 1 . result_src $end
$scope module ad $end
$var wire 3 G funct3 [2:0] $end
$var wire 1 9 funct7_5 $end
$var wire 2 H alu_op [1:0] $end
$var reg 3 I alu_control [2:0] $end
$upscope $end
$scope module md $end
$var wire 7 J opcode [6:0] $end
$var wire 1 ( reset $end
$var reg 2 K alu_op [1:0] $end
$var reg 1 B alu_src $end
$var reg 1 A branch $end
$var reg 3 L imm_src [2:0] $end
$var reg 1 ? jump $end
$var reg 1 > lui_src $end
$var reg 1 = mem_write $end
$var reg 1 < reg_write $end
$var reg 1 ; result_src $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 M alu_control [2:0] $end
$var wire 1 5 alu_src $end
$var wire 1 ' clk $end
$var wire 3 N imm_src [2:0] $end
$var wire 32 O instr [31:0] $end
$var wire 1 3 jump $end
$var wire 1 2 lui_src $end
$var wire 1 % mem_write $end
$var wire 1 0 pc_src $end
$var wire 32 P read_data [31:0] $end
$var wire 1 / reg_write $end
$var wire 1 ( reset $end
$var wire 1 . result_src $end
$var wire 1 , zero $end
$var wire 32 Q write_data [31:0] $end
$var wire 32 R src_b [31:0] $end
$var wire 32 S src_a [31:0] $end
$var wire 32 T result [31:0] $end
$var wire 32 U pc_target [31:0] $end
$var wire 32 V pc_plus4 [31:0] $end
$var wire 32 W pc_next [31:0] $end
$var wire 32 X pc_current [31:0] $end
$var wire 32 Y lui_auipc_result [31:0] $end
$var wire 32 Z imm_ext [31:0] $end
$var wire 32 [ alu_result_internal [31:0] $end
$var wire 32 \ alu_result [31:0] $end
$var wire 32 ] alu_or_mem [31:0] $end
$scope module imm_generator $end
$var wire 3 ^ imm_src [2:0] $end
$var wire 32 _ instr [31:0] $end
$var reg 32 ` imm_ext [31:0] $end
$upscope $end
$scope module lui_auipc_adder $end
$var wire 32 a a [31:0] $end
$var wire 32 b b [31:0] $end
$var wire 1 c cin $end
$var wire 33 d temp_sum [32:0] $end
$var wire 32 e sum [31:0] $end
$var wire 1 f cout $end
$upscope $end
$scope module main_alu $end
$var wire 3 g alu_control [2:0] $end
$var wire 32 h src_b [31:0] $end
$var wire 1 , zero $end
$var wire 32 i sub_result [31:0] $end
$var wire 1 j sub_cout $end
$var wire 32 k src_a [31:0] $end
$var wire 32 l sll_result [31:0] $end
$var wire 32 m setlessthan_result [31:0] $end
$var wire 32 n or_result [31:0] $end
$var wire 32 o and_result [31:0] $end
$var wire 32 p alu_result [31:0] $end
$var wire 32 q add_result [31:0] $end
$var wire 1 r add_cout $end
$var reg 32 s result_mux [31:0] $end
$scope module adder $end
$var wire 32 t b [31:0] $end
$var wire 1 u cin $end
$var wire 33 v temp_sum [32:0] $end
$var wire 32 w sum [31:0] $end
$var wire 1 r cout $end
$var wire 32 x a [31:0] $end
$upscope $end
$scope module and_op $end
$var wire 32 y b [31:0] $end
$var wire 32 z result [31:0] $end
$var wire 32 { a [31:0] $end
$upscope $end
$scope module or_op $end
$var wire 32 | b [31:0] $end
$var wire 32 } result [31:0] $end
$var wire 32 ~ a [31:0] $end
$upscope $end
$scope module sll_op $end
$var wire 32 !" result [31:0] $end
$var wire 5 "" shamt [4:0] $end
$var wire 32 #" shift8 [31:0] $end
$var wire 32 $" shift4 [31:0] $end
$var wire 32 %" shift2 [31:0] $end
$var wire 32 &" shift16 [31:0] $end
$var wire 32 '" shift1 [31:0] $end
$var wire 32 (" a [31:0] $end
$upscope $end
$scope module slt_op $end
$var wire 32 )" b [31:0] $end
$var wire 32 *" result [31:0] $end
$var wire 32 +" difference [31:0] $end
$var wire 1 ," cout $end
$var wire 32 -" a [31:0] $end
$scope module sub $end
$var wire 32 ." b [31:0] $end
$var wire 32 /" difference [31:0] $end
$var wire 1 ," cout $end
$var wire 32 0" b_complement [31:0] $end
$var wire 32 1" a [31:0] $end
$scope module sub $end
$var wire 32 2" b [31:0] $end
$var wire 1 3" cin $end
$var wire 33 4" temp_sum [32:0] $end
$var wire 32 5" sum [31:0] $end
$var wire 1 ," cout $end
$var wire 32 6" a [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module subtractor $end
$var wire 32 7" b [31:0] $end
$var wire 32 8" difference [31:0] $end
$var wire 1 j cout $end
$var wire 32 9" b_complement [31:0] $end
$var wire 32 :" a [31:0] $end
$scope module sub $end
$var wire 32 ;" b [31:0] $end
$var wire 1 <" cin $end
$var wire 33 =" temp_sum [32:0] $end
$var wire 32 >" sum [31:0] $end
$var wire 1 j cout $end
$var wire 32 ?" a [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc $end
$var wire 1 ' clk $end
$var wire 32 @" pc_next [31:0] $end
$var wire 1 ( reset $end
$var reg 32 A" pc_current [31:0] $end
$upscope $end
$scope module pc_plus4_adder $end
$var wire 32 B" a [31:0] $end
$var wire 32 C" b [31:0] $end
$var wire 1 D" cin $end
$var wire 33 E" temp_sum [32:0] $end
$var wire 32 F" sum [31:0] $end
$var wire 1 G" cout $end
$upscope $end
$scope module pc_target_adder $end
$var wire 32 H" a [31:0] $end
$var wire 32 I" b [31:0] $end
$var wire 1 J" cin $end
$var wire 33 K" temp_sum [32:0] $end
$var wire 32 L" sum [31:0] $end
$var wire 1 M" cout $end
$upscope $end
$scope module rf $end
$var wire 1 ' clk $end
$var wire 5 N" read_reg1 [4:0] $end
$var wire 5 O" read_reg2 [4:0] $end
$var wire 1 / reg_write $end
$var wire 1 ( reset $end
$var wire 32 P" write_data [31:0] $end
$var wire 5 Q" write_reg [4:0] $end
$var wire 32 R" read_data2 [31:0] $end
$var wire 32 S" read_data1 [31:0] $end
$var integer 32 T" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 U" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 V" i [31:0] $end
$upscope $end
$scope task display_registers $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000000000000 V"
b100000000 U"
bx T"
bx S"
b0 R"
b1 Q"
bx P"
b0 O"
b10101 N"
0M"
b0 L"
b0 K"
0J"
b0 I"
b0 H"
0G"
b100 F"
b100 E"
0D"
b100 C"
b0 B"
b0 A"
b100 @"
bx ?"
bx >"
bx ="
0<"
b0 ;"
bx :"
b0 9"
bx 8"
b0 7"
bx 6"
bx 5"
bx 4"
03"
b0 2"
bx 1"
b0 0"
bx /"
b0 ."
bx -"
x,"
bx +"
b0x *"
b0 )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
b0 ""
bx !"
bx ~
bx }
b0 |
bx {
b0 z
b0 y
bx x
bx w
bx v
0u
b0 t
bx s
xr
bx q
bx p
b0 o
bx n
b0x m
bx l
bx k
xj
bx i
b0 h
b0 g
0f
b0 e
b0 d
0c
b0 b
b0 a
b0 `
b10101011000010110111 _
b0 ^
bx ]
bx \
bx [
b0 Z
b0 Y
b0 X
b100 W
b100 V
b0 U
bx T
bx S
b0 R
b0 Q
bx P
b10101011000010110111 O
b0 N
b0 M
b0 L
b0 K
b110111 J
b0 I
b0 H
b11 G
b0 F
b0 E
b0 D
b0 C
0B
0A
b0 @
0?
0>
0=
0<
0;
b110111 :
09
b11 8
b0 7
bx 6
05
b0 4
03
02
b0 1
00
0/
0.
b0 -
x,
bx +
b10101011000010110111 *
b0 )
1(
0'
bx &
0%
b0 $
bx #
b0 "
b10101011000010110111 !
$end
#5
b0 T
b0 P"
b0 l
b0 !"
b0 &"
b0 #
b0 +
b0 P
b0 #"
b0 ]
b0 $"
b0 &
b0 6
b0 \
b0 m
b0 *"
b0 %"
1,
b0 [
b0 p
b0 s
b0 i
b0 8"
b0 >"
0j
b0 +"
b0 /"
b0 5"
0,"
b0 '"
b0 n
b0 }
b0 q
b0 w
0r
b0 ="
b0 4"
b0 v
b0 S
b0 k
b0 x
b0 {
b0 ~
b0 ("
b0 -"
b0 1"
b0 6"
b0 :"
b0 ?"
b0 S"
b100000 T"
1'
#10
b0x m
b0x *"
b0x0x0x0xx000000000000 ]
x,
bx [
bx p
bx s
bx +"
bx /"
bx 5"
x,"
bx i
bx 8"
bx >"
xj
b10101011000000000000 T
b10101011000000000000 P"
b10101011000000000000 &
b10101011000000000000 6
b10101011000000000000 \
bx q
bx w
xr
b0x0x0x0xx000000000000 n
b0x0x0x0xx000000000000 }
bx 4"
bx 0"
bx 2"
bx ="
bx 9"
bx ;"
b10101011000000000000 Y
b10101011000000000000 e
b10101011000000000000 U
b10101011000000000000 L"
bx v
b0x0x0x0xx000000000000 R
b0x0x0x0xx000000000000 h
b0x0x0x0xx000000000000 t
b0x0x0x0xx000000000000 y
b0x0x0x0xx000000000000 |
b0x0x0x0xx000000000000 )"
b0x0x0x0xx000000000000 ."
b0x0x0x0xx000000000000 7"
b10101011000000000000 d
b10101011000000000000 K"
b10101011000000000000 Z
b10101011000000000000 `
b10101011000000000000 a
b10101011000000000000 I"
12
x.
x5
b100 4
b100 F
b100 N
b100 ^
1/
1>
x;
xB
b100 @
b100 L
1<
0'
0(
#15
bx00xx0x000000000000 ]
b11111111111111001101000000000000 T
b11111111111111001101000000000000 P"
b11111111111111001101000000000000 &
b11111111111111001101000000000000 6
b11111111111111001101000000000000 \
bx00xx0x000000000000 n
bx00xx0x000000000000 }
b11111111111111001101000000000000 Y
b11111111111111001101000000000000 e
bx00xx0x000000000000 R
bx00xx0x000000000000 h
bx00xx0x000000000000 t
bx00xx0x000000000000 y
bx00xx0x000000000000 |
bx00xx0x000000000000 )"
bx00xx0x000000000000 ."
bx00xx0x000000000000 7"
b1000 W
b1000 @"
b101 8
b101 G
19
b11001 N"
b11111 O"
b10 Q"
b11111111111111001101000000000000 d
b11111111111111001101000000000000 Z
b11111111111111001101000000000000 `
b11111111111111001101000000000000 a
b11111111111111001101000000000000 I"
b1000 V
b1000 F"
b11111111111111001101000000000100 U
b11111111111111001101000000000100 L"
b11111111111111001101000100110111 !
b11111111111111001101000100110111 *
b11111111111111001101000100110111 O
b11111111111111001101000100110111 _
b1000 E"
b11111111111111001101000000000100 K"
b100 $
b100 1
b100 X
b100 A"
b100 B"
b100 H"
1'
#20
0'
#25
b0x000000000000 ]
b1000000000000 T
b1000000000000 P"
b1000000000000 &
b1000000000000 6
b1000000000000 \
b0x000000000000 n
b0x000000000000 }
b1000000000000 Y
b1000000000000 e
b0x000000000000 R
b0x000000000000 h
b0x000000000000 t
b0x000000000000 y
b0x000000000000 |
b0x000000000000 )"
b0x000000000000 ."
b0x000000000000 7"
b1100 W
b1100 @"
b1 8
b1 G
09
b0 N"
b0 O"
b100 Q"
b1000000000000 d
b1000000000000 Z
b1000000000000 `
b1000000000000 a
b1000000000000 I"
b1100 V
b1100 F"
b1000000001000 U
b1000000001000 L"
b1001000110111 !
b1001000110111 *
b1001000110111 O
b1001000110111 _
b1100 E"
b1000000001000 K"
b1000 $
b1000 1
b1000 X
b1000 A"
b1000 B"
b1000 H"
b100 )
1'
#30
0'
#35
b0x00000000xx00 ]
b1000000001100 T
b1000000001100 P"
b1000000001100 &
b1000000001100 6
b1000000001100 \
b1000000001100 Y
b1000000001100 e
b1000000001100 d
b1100 b
b10000 W
b10000 @"
b10111 :
b10111 J
b11 Q"
b10000 V
b10000 F"
b1000000001100 U
b1000000001100 L"
b1000110010111 !
b1000110010111 *
b1000110010111 O
b1000110010111 _
b10000 E"
b1000000001100 K"
b1100 $
b1100 1
b1100 X
b1100 A"
b1100 B"
b1100 H"
b1000 )
1'
#40
0'
#45
b1 m
b1 *"
0,
b1 [
b1 p
b1 s
b11111111111111111111111111111111 +"
b11111111111111111111111111111111 /"
b11111111111111111111111111111111 5"
0,"
b11111111111111111111111111111111 i
b11111111111111111111111111111111 8"
b11111111111111111111111111111111 >"
0j
b0 #
b0 +
b0 P
b1 ""
b1 q
b1 w
0r
b11111111111111111111111111111111 4"
b11111111111111111111111111111111 0"
b11111111111111111111111111111111 2"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 9"
b11111111111111111111111111111111 ;"
b1 v
b1 ]
02
0.
15
b0 4
b0 F
b0 N
b0 ^
b1 n
b1 }
b1 T
b1 P"
b1 &
b1 6
b1 \
0>
b10 C
b10 H
b10 K
0;
1B
b0 @
b0 L
b10101011000000000000 "
b10101011000000000000 -
b10101011000000000000 Q
b10101011000000000000 R"
b1 R
b1 h
b1 t
b1 y
b1 |
b1 )"
b1 ."
b1 7"
b10100 W
b10100 @"
b1 Y
b1 e
b10011 :
b10011 J
b0 8
b0 G
b1 O"
b101 Q"
b1 Z
b1 `
b1 a
b1 I"
b10100 V
b10100 F"
b10001 U
b10001 L"
b1 d
b0 b
b100000000001010010011 !
b100000000001010010011 *
b100000000001010010011 O
b100000000001010010011 _
b10100 E"
b10001 K"
b10000 $
b10000 1
b10000 X
b10000 A"
b10000 B"
b10000 H"
b1100 )
1'
#50
0'
#55
b10 l
b10 !"
b10 &"
b10 T
b10 P"
b10 #"
b10 $"
b10 ]
b10 %"
b10 &
b10 6
b10 \
b0 m
b0 *"
b10 '"
0,
b10 [
b10 p
b10 s
b100 7
b100 E
b100 M
b100 g
b0 i
b0 8"
b0 >"
1j
b0 +"
b0 /"
b0 5"
1,"
b1 o
b1 z
b10 q
b10 w
b100 D
b100 I
b100000000000000000000000000000000 ="
b100000000000000000000000000000000 4"
b10 v
b1 S
b1 k
b1 x
b1 {
b1 ~
b1 ("
b1 -"
b1 1"
b1 6"
b1 :"
b1 ?"
b1 S"
b11000 W
b11000 @"
b1 8
b1 G
b101 N"
b110 Q"
b11000 V
b11000 F"
b10101 U
b10101 L"
b100101001001100010011 !
b100101001001100010011 *
b100101001001100010011 O
b100101001001100010011 _
b11000 E"
b10101 K"
b10100 $
b10100 1
b10100 X
b10100 A"
b10100 B"
b10100 H"
b10000 )
1'
#60
0'
#65
b11 T
b11 P"
b100 l
b100 !"
b100 &"
b100 #"
b11 ]
b1 '"
b100 %"
b100 $"
b11 &
b11 6
b11 \
b1 m
b1 *"
b11 [
b11 p
b11 s
b11111111111111111111111111111111 +"
b11111111111111111111111111111111 /"
b11111111111111111111111111111111 5"
0,"
b11111111111111111111111111111111 i
b11111111111111111111111111111111 8"
b11111111111111111111111111111111 >"
0j
b0 7
b0 E
b0 M
b0 g
05
bx 4
bx F
bx N
bx ^
b10 ""
b11 q
b11 w
b0 o
b0 z
b11 n
b11 }
b11111111111111111111111111111111 4"
b11111111111111111111111111111110 0"
b11111111111111111111111111111110 2"
b11111111111111111111111111111111 ="
b11111111111111111111111111111110 9"
b11111111111111111111111111111110 ;"
0B
bx @
bx L
b0 D
b0 I
b10 "
b10 -
b10 Q
b10 R"
b0 Y
b0 e
b11 v
b10 R
b10 h
b10 t
b10 y
b10 |
b10 )"
b10 ."
b10 7"
b11100 W
b11100 @"
b110011 :
b110011 J
b0 8
b0 G
b110 O"
b101 Q"
b0 d
b0 Z
b0 `
b0 a
b0 I"
b11100 V
b11100 F"
b11000 U
b11000 L"
b11000101000001010110011 !
b11000101000001010110011 *
b11000101000001010110011 O
b11000101000001010110011 _
b11100 E"
b11000 K"
b11000 $
b11000 1
b11000 X
b11000 A"
b11000 B"
b11000 H"
b10100 )
1'
#70
0'
#75
x,
b10101011000000000000 l
b10101011000000000000 !"
b10101011000000000000 &"
xr
b1000000000000000 Y
b1000000000000000 e
b10101011000000000000 #"
b1000000000000000 T
b1000000000000000 P"
b1000000000000000 d
b1000000000000000 Z
b1000000000000000 `
b1000000000000000 a
b1000000000000000 I"
b0 ""
bx 0"
bx 2"
bx 9"
bx ;"
b10101011000000000000 $"
b0x000000000000000 ]
12
x.
x5
b100 4
b100 F
b100 N
b100 ^
b10101011000000000000 n
b10101011000000000000 }
b0x000000000000000 R
b0x000000000000000 h
b0x000000000000000 t
b0x000000000000000 y
b0x000000000000000 |
b0x000000000000000 )"
b0x000000000000000 ."
b0x000000000000000 7"
b10101011000000000000 %"
b1000000000000000 &
b1000000000000000 6
b1000000000000000 \
1>
b0 C
b0 H
b0 K
x;
xB
b100 @
b100 L
b0 "
b0 -
b0 Q
b0 R"
b0x m
b0x *"
bx [
bx p
bx s
b100000 W
b100000 @"
b110111 :
b110111 J
b1 N"
b0 O"
b110 Q"
bx i
bx 8"
bx >"
xj
bx +"
bx /"
bx 5"
x,"
b10101011000000000000 '"
b0x000000000000000 o
b0x000000000000000 z
bx q
bx w
b100000 V
b100000 F"
b1000000000011100 U
b1000000000011100 L"
b1000001100110111 !
b1000001100110111 *
b1000001100110111 O
b1000001100110111 _
bx ="
bx 4"
bx v
b10101011000000000000 S
b10101011000000000000 k
b10101011000000000000 x
b10101011000000000000 {
b10101011000000000000 ~
b10101011000000000000 ("
b10101011000000000000 -"
b10101011000000000000 1"
b10101011000000000000 6"
b10101011000000000000 :"
b10101011000000000000 ?"
b10101011000000000000 S"
b100000 E"
b1000000000011100 K"
b11100 $
b11100 1
b11100 X
b11100 A"
b11100 B"
b11100 H"
b11000 )
1'
#80
0'
#85
b1 m
b1 *"
b11000000 l
b11000000 !"
b11000000 &"
b0 #
b0 +
b0 P
0,
b1001 [
b1001 p
b1001 s
b11111111111111111111111111111101 +"
b11111111111111111111111111111101 /"
b11111111111111111111111111111101 5"
0,"
b11111111111111111111111111111101 i
b11111111111111111111111111111101 8"
b11111111111111111111111111111101 >"
0j
b11000000 #"
b110 ""
b1001 q
b1001 w
0r
b11111111111111111111111111111101 4"
b11111111111111111111111111111010 0"
b11111111111111111111111111111010 2"
b11111111111111111111111111111101 ="
b11111111111111111111111111111010 9"
b11111111111111111111111111111010 ;"
b11000000 $"
b1001 v
b1100 %"
b1001 ]
02
0.
15
b0 4
b0 F
b0 N
b0 ^
b11 '"
b1001 T
b1001 P"
b1001 &
b1001 6
b1001 \
b10 o
b10 z
b111 n
b111 }
0>
b10 C
b10 H
b10 K
0;
1B
b0 @
b0 L
b11 S
b11 k
b11 x
b11 {
b11 ~
b11 ("
b11 -"
b11 1"
b11 6"
b11 :"
b11 ?"
b11 S"
b1000000000000000 "
b1000000000000000 -
b1000000000000000 Q
b1000000000000000 R"
b110 Y
b110 e
b110 R
b110 h
b110 t
b110 y
b110 |
b110 )"
b110 ."
b110 7"
b100100 W
b100100 @"
b10011 :
b10011 J
b101 N"
b110 O"
b101 Q"
b110 d
b110 Z
b110 `
b110 a
b110 I"
b100100 V
b100100 F"
b100110 U
b100110 L"
b11000101000001010010011 !
b11000101000001010010011 *
b11000101000001010010011 O
b11000101000001010010011 _
b100100 E"
b100110 K"
b100000 $
b100000 1
b100000 X
b100000 A"
b100000 B"
b100000 H"
b11100 )
1'
#90
0'
#95
b1000000000000000 l
b1000000000000000 !"
b1000000000000000 &"
b1000000000000000 #"
b0x000000000000000 T
b0x000000000000000 P"
b1000000000000000 $"
0,
b0x000000000000000 ]
b0 7
b0 E
b0 M
b0 g
x.
1%
b1 4
b1 F
b1 N
b1 ^
0/
b0 ""
b0 0"
b0 2"
b0 9"
b0 ;"
b1000000000000000 %"
b1000000000000000 &
b1000000000000000 6
b1000000000000000 \
b0 C
b0 H
b0 K
x;
1=
b1 @
b1 L
0<
b0 D
b0 I
b1001 "
b1001 -
b1001 Q
b1001 R"
b0 Y
b0 e
b0 R
b0 h
b0 t
b0 y
b0 |
b0 )"
b0 ."
b0 7"
b0 m
b0 *"
b1000000000000000 [
b1000000000000000 p
b1000000000000000 s
b101000 W
b101000 @"
b100011 :
b100011 J
b10 8
b10 G
b110 N"
b101 O"
b0 Q"
b0 d
b0 Z
b0 `
b0 a
b0 I"
b1000000000000000 i
b1000000000000000 8"
b1000000000000000 >"
0j
b1000000000000000 +"
b1000000000000000 /"
b1000000000000000 5"
0,"
b1000000000000000 '"
b1000000000000000 n
b1000000000000000 }
b0 o
b0 z
b1000000000000000 q
b1000000000000000 w
b101000 V
b101000 F"
b100100 U
b100100 L"
b10100110010000000100011 !
b10100110010000000100011 *
b10100110010000000100011 O
b10100110010000000100011 _
b1000000000000000 ="
b1000000000000000 4"
b1000000000000000 v
b1000000000000000 S
b1000000000000000 k
b1000000000000000 x
b1000000000000000 {
b1000000000000000 ~
b1000000000000000 ("
b1000000000000000 -"
b1000000000000000 1"
b1000000000000000 6"
b1000000000000000 :"
b1000000000000000 ?"
b1000000000000000 S"
b101000 E"
b100100 K"
b100100 $
b100100 1
b100100 X
b100100 A"
b100100 B"
b100100 H"
b100000 )
1'
#100
0'
#105
b1000000000000000 l
b1000000000000000 !"
b1000000000000000 &"
b1000000000000000 #"
b1000000000000000 '"
b1000000000000000 %"
b1000000000000000 $"
b1000000000000000 &
b1000000000000000 6
b1000000000000000 \
b1000000000000000 [
b1000000000000000 p
b1000000000000000 s
b1000000000000000 +"
b1000000000000000 /"
b1000000000000000 5"
0,"
b1000000000000000 i
b1000000000000000 8"
b1000000000000000 >"
0j
1.
0%
b0 4
b0 F
b0 N
b0 ^
1/
b0 ""
b1000000000000000 q
b1000000000000000 w
b1000000000000000 n
b1000000000000000 }
b1000000000000000 4"
b0 0"
b0 2"
b1000000000000000 ="
b0 9"
b0 ;"
1;
0=
b0 @
b0 L
1<
b0 "
b0 -
b0 Q
b0 R"
b0 Y
b0 e
b1000000000000000 v
b0 R
b0 h
b0 t
b0 y
b0 |
b0 )"
b0 ."
b0 7"
b101100 W
b101100 @"
b11 :
b11 J
b0 O"
b111 Q"
b0 d
b0 Z
b0 `
b0 a
b0 I"
b101100 V
b101100 F"
b101000 U
b101000 L"
b110010001110000011 !
b110010001110000011 *
b110010001110000011 O
b110010001110000011 _
b101100 E"
b101000 K"
b101000 $
b101000 1
b101000 X
b101000 A"
b101000 B"
b101000 H"
b1001 T
b1001 P"
b1001 ]
b1001 #
b1001 +
b1001 P
b100100 )
1'
#110
0'
#115
10
1,
b1001000000000 l
b1001000000000 !"
b1001000000000 &"
b0 #
b0 +
b0 P
b0 T
b0 P"
b1001000000000 #"
b10010 $"
b0 &
b0 6
b0 \
b1 7
b1 E
b1 M
b1 g
b0 ]
b10010 %"
b0 [
b0 p
b0 s
1,"
1j
b1 D
b1 I
x.
05
b10 4
b10 F
b10 N
b10 ^
0/
b0 i
b0 8"
b0 >"
b0 +"
b0 /"
b0 5"
b10010 '"
b1001 ""
b10010 q
b10010 w
b1001 o
b1001 z
b1001 n
b1001 }
b11111111111111111111111111110111 0"
b11111111111111111111111111110111 2"
b11111111111111111111111111110111 9"
b11111111111111111111111111110111 ;"
b1 C
b1 H
b1 K
1A
x;
0B
b10 @
b10 L
0<
b100000000000000000000000000000000 ="
b100000000000000000000000000000000 4"
b1001 S
b1001 k
b1001 x
b1001 {
b1001 ~
b1001 ("
b1001 -"
b1001 1"
b1001 6"
b1001 :"
b1001 ?"
b1001 S"
b1001 "
b1001 -
b1001 Q
b1001 R"
b1000 Y
b1000 e
b10010 v
b1001 R
b1001 h
b1001 t
b1001 y
b1001 |
b1001 )"
b1001 ."
b1001 7"
b110100 W
b110100 @"
b1100011 :
b1100011 J
b0 8
b0 G
b101 N"
b111 O"
b1000 Q"
b1000 d
b1000 Z
b1000 `
b1000 a
b1000 I"
b110000 V
b110000 F"
b110100 U
b110100 L"
b11100101000010001100011 !
b11100101000010001100011 *
b11100101000010001100011 O
b11100101000010001100011 _
b110000 E"
b110100 K"
b101100 $
b101100 1
b101100 X
b101100 A"
b101100 B"
b101100 H"
b101000 )
1'
#120
0'
#125
b0 l
b0 !"
b0 &"
b0 $"
b0 #"
b0xx0x00 ]
b0 %"
b0 7
b0 E
b0 M
b0 g
b110100 &
b110100 6
b110100 \
b110100 T
b110100 P"
b0 m
b0 *"
b0 '"
1,
b0 [
b0 p
b0 s
b0 ""
b0 0"
b0 2"
b0 9"
b0 ;"
b0 D
b0 I
12
00
x5
b100 4
b100 F
b100 N
b100 ^
1/
b0 i
b0 8"
b0 >"
0j
b0 +"
b0 /"
b0 5"
0,"
b0 n
b0 }
b0 o
b0 z
b0 q
b0 w
b0 R
b0 h
b0 t
b0 y
b0 |
b0 )"
b0 ."
b0 7"
1>
b0 C
b0 H
b0 K
0A
xB
b100 @
b100 L
1<
b110100 b
b0 ="
b0 4"
b0 v
b0 S
b0 k
b0 x
b0 {
b0 ~
b0 ("
b0 -"
b0 1"
b0 6"
b0 :"
b0 ?"
b0 S"
b0 "
b0 -
b0 Q
b0 R"
b110100 Y
b110100 e
b111000 W
b111000 @"
b10111 :
b10111 J
b0 N"
b0 O"
b1 Q"
b110100 d
b0 Z
b0 `
b0 a
b0 I"
b111000 V
b111000 F"
b110100 U
b110100 L"
b10010111 !
b10010111 *
b10010111 O
b10010111 _
b111000 E"
b110100 K"
b110100 $
b110100 1
b110100 X
b110100 A"
b110100 B"
b110100 H"
b101100 )
1'
#130
0'
#135
b1 7
b1 E
b1 M
b1 g
b0 ]
b1 D
b1 I
02
10
05
b10 4
b10 F
b10 N
b10 ^
0/
b0 T
b0 P"
b0 &
b0 6
b0 \
0>
b1 C
b1 H
b1 K
1A
0B
b10 @
b10 L
0<
b111000 W
b111000 @"
b0 Y
b0 e
b1100011 :
b1100011 J
b0 Q"
b111100 V
b111100 F"
b111000 U
b111000 L"
b0 d
b0 b
b1100011 !
b1100011 *
b1100011 O
b1100011 _
b111100 E"
b111000 K"
b111000 $
b111000 1
b111000 X
b111000 A"
b111000 B"
b111000 H"
b110100 )
1'
#140
0'
#145
b111000 )
1'
#150
0'
#155
1'
#160
0'
#165
1'
#170
0'
#175
1'
#180
0'
#185
1'
#190
0'
#195
1'
#200
0'
#205
1'
#210
0'
#215
1'
#220
0'
#225
1'
#230
0'
#235
1'
#240
0'
#245
1'
#250
0'
#255
1'
#260
0'
#265
1'
#270
0'
#275
1'
#280
0'
#285
1'
#290
0'
#295
1'
#300
0'
#305
1'
#310
0'
#315
1'
#320
0'
#325
1'
#330
0'
#335
1'
#340
0'
#345
1'
#350
0'
#355
1'
#360
0'
#365
1'
#370
0'
#375
1'
#380
0'
#385
1'
#390
0'
#395
1'
#400
0'
#405
1'
#410
0'
#415
1'
#420
0'
#425
1'
#430
0'
#435
1'
#440
0'
#445
1'
#450
0'
#455
1'
#460
0'
#465
1'
#470
0'
#475
1'
#480
0'
#485
1'
#490
0'
#495
1'
#500
0'
#505
1'
#510
0'
